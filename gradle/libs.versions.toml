[versions]
# Core
agp = "8.8.1"
kotlin = "2.1.10"
coreKtx = "1.10.1"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
lifecycleRuntimeKtx = "2.6.1"
activityCompose = "1.8.0"
android-core = "1.15.0"
android-lifecycle = "2.8.7"
android-activity = "1.10.0"
androidx-test-ext = "1.2.1"
androidx-test-espresso = "3.6.1"
coroutines = "1.7.3"
gson = "2.10.1"
mockk = "1.13.8"

# Compose
compose-bom = "2025.02.00"
compose-ui = "1.7.8"

# Koin
koin = "3.5.3"

# Retrofit
retrofit = "2.9.0"
okhttp = "4.12.0"

# Glide
glide = "4.16.0"
glide-compose = "1.0.0-beta01"

# Mockito
mockito = "5.2.0"

# Plugins
ksp = "2.1.10-1.0.30"

[libraries]
# Core
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "android-core" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "android-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "android-lifecycle" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-activity" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
junit = { module = "junit:junit", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Compose
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
androidx-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "compose-ui" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-ui" }
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "compose-ui" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose-ui" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glide-compose" }

# Mockito
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

